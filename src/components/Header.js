import React, { memo, useRef, useState } from 'react';
import GenderIcon from './UI/GenderIcon';
import Logo from './UI/Logo';
import { ethers } from 'ethers'
import abi from './abi.json'
import { getProvider } from "./ModalWallet";






const headerLinks = [
    {
        title: 'Storyline',
        link: '#storyline'
    },
    {
        title: 'RoadMap',
        link: '#roadmap'
    },
    {
        title: 'Team',
        link: '#team'
    },
    {
        title: 'FAQ',
        link: '#faq'
    },
]

const Header = ({
    setWalletOpen, setGenderOpen
}) => {

    const [burgerOpen, setBurgerOpen] = useState(false);
    const headerMenuRef = useRef(null);
    const burgerIconRef = useRef(null);


    const burgerOpenHandler = () => {
        setBurgerOpen(!burgerOpen);
        document.querySelector('body').classList.toggle('scroll-lock');
    }

    const scroolTo = (blockID) => {
        document.body.classList.remove('scroll-lock');
        if(headerMenuRef.current.classList.contains('active')){
            headerMenuRef.current.classList.remove('active');
            burgerIconRef.current.classList.remove('active');
        }

        document.getElementById(blockID).scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
    }

    return (
        <header className="header">
          <div className="container">
            <div className="header__wrap">
            {/* <Logo /> */}
            <nav ref={headerMenuRef} className={`header__menu ${burgerOpen ? 'active' : ''}`}>
                <ul>
                {
                    headerLinks.map(item => (
                        <li key={item.title} className="header__nav-item">
                            <a
                                onClick={(e) => {
                                    e.preventDefault();
                                    scroolTo(item.link.replace('#', ''))
                                }}
                                className="header__nav-link"
                                href={item.link}
                            >
                            {item.title}</a>
                        </li>

                    ))
                }
                </ul>
            </nav>
            <button ref={burgerIconRef} onClick={burgerOpenHandler} className={`header__burger ${burgerOpen ? 'active' : ''}`}>
                <span></span>
            </button>
            <div className="header__content">
                <div className="header__soc">
                <a className="header__soc-item header__soc-item--tg" href="#">
                    <svg width="16" height="14" viewBox="0 0 16 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1.01303 6.28056L4.4616 7.56647L5.80595 11.8918C5.8644 12.184 6.2151 12.2425 6.4489 12.0671L8.37775 10.489C8.5531 10.3136 8.84536 10.3136 9.07916 10.489L12.5277 13.0023C12.7615 13.1777 13.1122 13.0608 13.1707 12.7685L15.7425 0.493992C15.8009 0.201741 15.5087 -0.0905074 15.2164 0.0263929L1.01303 5.52071C0.662325 5.63761 0.662325 6.16366 1.01303 6.28056ZM5.6306 6.92351L12.4108 2.77355C12.5277 2.7151 12.6446 2.89045 12.5277 2.9489L6.97495 8.15097C6.7996 8.32632 6.62425 8.56012 6.62425 8.85237L6.4489 10.2552C6.4489 10.4305 6.15665 10.489 6.0982 10.2552L5.39679 7.68336C5.22144 7.39111 5.33835 7.04041 5.6306 6.92351Z" />
                    </svg>
                </a>
                <a className="header__soc-item header__soc-item--tw" href="https://twitter.com/mandelmasksNFT">
                    <svg width="15" height="13" viewBox="0 0 15 13" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M14.95 2.175C14.425 2.4 13.825 2.55 13.225 2.625C13.825 2.25 14.35 1.65 14.575 0.975002C13.975 1.35 13.375 1.575 12.625 1.725C12.1 1.125 11.275 0.75 10.45 0.75C8.79999 0.75 7.44999 2.1 7.44999 3.75C7.44999 3.975 7.45 4.2 7.525 4.425C5.05 4.275 2.8 3.075 1.3 1.275C1.075 1.725 0.924995 2.25 0.924995 2.775C0.924995 3.825 1.45 4.725 2.275 5.25C1.75 5.25 1.3 5.1 0.924995 4.875C0.924995 6.3 1.97499 7.575 3.32499 7.8C3.09999 7.875 2.8 7.875 2.5 7.875C2.275 7.875 2.125 7.875 1.9 7.8C2.275 9 3.4 9.9 4.75 9.9C3.7 10.725 2.425 11.175 1 11.175C0.775 11.175 0.55 11.175 0.25 11.1C1.6 11.925 3.175 12.45 4.9 12.45C10.45 12.45 13.45 7.875 13.45 3.9V3.525C14.05 3.3 14.575 2.775 14.95 2.175Z" />
                    </svg>
                </a>
                <a className="header__soc-item header__soc-item--os" href="#">
                    <svg width="19" height="17" viewBox="0 0 19 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M18.7934 10.6383V11.6046C18.7934 11.66 18.7595 11.7094 18.7101 11.7309C18.4081 11.8604 17.374 12.335 16.9441 12.933C15.8468 14.4602 15.0084 16.644 13.1344 16.644H5.31635C2.54546 16.644 0.300049 14.3909 0.300049 11.6107V11.5213C0.300049 11.4474 0.360139 11.3873 0.434119 11.3873H4.7924C4.87868 11.3873 4.94186 11.4674 4.93418 11.5522C4.90334 11.8357 4.95575 12.1255 5.08982 12.389C5.34872 12.9145 5.88503 13.2428 6.46448 13.2428H8.62205V11.5583H6.48914C6.37973 11.5583 6.31502 11.432 6.3782 11.3426C6.4013 11.3071 6.42752 11.2702 6.45524 11.2286C6.65714 10.9419 6.94532 10.4965 7.23197 9.98949C7.42769 9.64737 7.61723 9.28212 7.76981 8.91534C7.80065 8.84907 7.82528 8.78124 7.84994 8.71497C7.89155 8.59785 7.93472 8.48844 7.96553 8.37903C7.99637 8.28654 8.021 8.18946 8.04566 8.09853C8.11811 7.78722 8.14892 7.45743 8.14892 7.11531C8.14892 6.98124 8.14277 6.84099 8.13044 6.70692C8.12426 6.56052 8.10578 6.41409 8.08727 6.26769C8.07494 6.13824 8.05184 6.01032 8.02718 5.87625C7.99637 5.68053 7.9532 5.48637 7.90388 5.29062L7.88693 5.21667C7.84994 5.08257 7.81913 4.95468 7.77599 4.82061C7.65422 4.39986 7.514 3.98994 7.36604 3.60621C7.3121 3.45363 7.25045 3.30723 7.1888 3.16083C7.0979 2.94045 7.00541 2.74011 6.92066 2.55054C6.87752 2.46423 6.84053 2.38563 6.80354 2.3055C6.76193 2.21457 6.71879 2.12364 6.67562 2.03736C6.64481 1.97109 6.60935 1.90944 6.58469 1.84779L6.32117 1.3608C6.28418 1.29453 6.34583 1.21593 6.41825 1.23597L8.06726 1.68288H8.07188C8.07494 1.68288 8.0765 1.68444 8.07803 1.68444L8.29532 1.74453L8.53421 1.81236L8.62205 1.83699V0.85686C8.62205 0.38373 9.00116 0 9.46967 0C9.70391 0 9.91658 0.0955498 10.0692 0.25119C10.2217 0.40686 10.3173 0.61953 10.3173 0.85686V2.31168L10.493 2.36097C10.5068 2.36562 10.5207 2.37177 10.533 2.38101C10.5762 2.41338 10.6378 2.46114 10.7164 2.51973C10.7781 2.56902 10.8443 2.62914 10.9245 2.69079C11.0832 2.81868 11.2728 2.98359 11.4808 3.17316C11.5363 3.22092 11.5902 3.27024 11.6395 3.31956C11.9077 3.56922 12.2082 3.86202 12.4949 4.18566C12.575 4.27659 12.6536 4.36905 12.7337 4.46613C12.8139 4.56477 12.8986 4.66185 12.9726 4.75896C13.0697 4.88841 13.1745 5.02248 13.2654 5.16273C13.3086 5.229 13.3579 5.2968 13.3995 5.36307C13.5166 5.54028 13.6199 5.7237 13.7185 5.90709C13.7601 5.99184 13.8033 6.0843 13.8403 6.17523C13.9497 6.42027 14.036 6.66993 14.0914 6.91959C14.1084 6.97353 14.1207 7.03209 14.1269 7.0845V7.09683C14.1454 7.17078 14.1516 7.24938 14.1577 7.32951C14.1824 7.58535 14.17 7.84116 14.1146 8.09853C14.0914 8.20797 14.0606 8.3112 14.0236 8.42064C13.9867 8.52543 13.9497 8.63484 13.9019 8.7381C13.8094 8.9523 13.7 9.16653 13.5706 9.36687C13.5289 9.44085 13.4796 9.51945 13.4303 9.59343C13.3764 9.672 13.3209 9.74598 13.2716 9.81843C13.2038 9.91089 13.1314 10.008 13.0574 10.0943C12.9911 10.1852 12.9233 10.2761 12.8493 10.3563C12.7461 10.478 12.6474 10.5936 12.5442 10.7046C12.4825 10.777 12.4163 10.851 12.3484 10.9172C12.2822 10.9912 12.2144 11.0575 12.1527 11.1191C12.0495 11.2224 11.9632 11.3025 11.8907 11.3688L11.7212 11.5244C11.6966 11.546 11.6642 11.5583 11.6303 11.5583H10.3173V13.2428H11.9693C12.3392 13.2428 12.6906 13.1118 12.9742 12.8714C13.0712 12.7866 13.495 12.4198 13.9959 11.8666C14.0128 11.8481 14.0344 11.8342 14.0591 11.828L18.6223 10.5089C18.7071 10.4842 18.7934 10.5489 18.7934 10.6383Z" />
                    </svg>
                </a>
                <a className="header__soc-item header__soc-item--ds" href="https://discord.com/invite/ZAKeX8Dj">
                    <svg width="16" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.1981 0.994734C12.2421 0.534315 11.2169 0.195098 10.1449 0.000815003C10.1254 -0.00293461 10.1059 0.00643587 10.0959 0.0251773C9.96401 0.27131 9.81796 0.592411 9.71568 0.844794C8.56275 0.663633 7.41574 0.663633 6.28645 0.844794C6.18415 0.586801 6.0328 0.27131 5.90036 0.0251773C5.8903 0.00706117 5.8708 -0.00230931 5.85128 0.000814999C4.77994 0.194478 3.75473 0.533694 2.79808 0.994734C2.7898 0.998482 2.7827 1.00473 2.77799 1.01285C0.83337 4.06208 0.300656 7.03635 0.561988 9.97375C0.56317 9.98812 0.570856 10.0019 0.581499 10.0106C1.86451 10.9995 3.10732 11.5999 4.32705 11.9978C4.34657 12.0041 4.36725 11.9966 4.37968 11.9797C4.6682 11.5662 4.9254 11.1301 5.14592 10.6715C5.15894 10.6447 5.14651 10.6128 5.11992 10.6022C4.71196 10.4398 4.3235 10.2417 3.94983 10.0169C3.92027 9.99874 3.91791 9.95437 3.9451 9.93313C4.02373 9.87129 4.10239 9.80694 4.17747 9.74197C4.19106 9.73011 4.20999 9.7276 4.22596 9.7351C6.6808 10.9114 9.33846 10.9114 11.7643 9.7351C11.7803 9.72698 11.7992 9.72949 11.8134 9.74135C11.8885 9.80632 11.9672 9.87129 12.0464 9.93313C12.0736 9.95437 12.0718 9.99874 12.0422 10.0169C11.6686 10.2461 11.2801 10.4398 10.8716 10.6016C10.845 10.6122 10.8331 10.6447 10.8462 10.6715C11.0714 11.1295 11.3286 11.5655 11.6118 11.9791C11.6236 11.9966 11.6449 12.0041 11.6644 11.9978C12.8901 11.5999 14.1329 10.9995 15.4159 10.0106C15.4271 10.0019 15.4342 9.98874 15.4354 9.97438C15.7482 6.57842 14.9116 3.62853 13.2176 1.01347C13.2135 1.00473 13.2064 0.998482 13.1981 0.994734ZM5.51251 8.18518C4.77344 8.18518 4.16446 7.47302 4.16446 6.59842C4.16446 5.72381 4.76163 5.01165 5.51251 5.01165C6.2693 5.01165 6.87238 5.73006 6.86055 6.59842C6.86055 7.47302 6.26338 8.18518 5.51251 8.18518ZM10.4967 8.18518C9.75766 8.18518 9.14868 7.47302 9.14868 6.59842C9.14868 5.72381 9.74583 5.01165 10.4967 5.01165C11.2535 5.01165 11.8566 5.73006 11.8448 6.59842C11.8448 7.47302 11.2535 8.18518 10.4967 8.18518Z"/>
                    </svg>
                </a>
                </div>
                <div style={{display: 'flex', alignTtems: 'center'}}>
                    {/* <GenderIcon setModal={setGenderOpen} /> */}
                    <button
                        onClick={() => setWalletOpen(prev => !prev)}

                        className="header__wallet btn btn--transparent"
                        data-modal="wallet"
                    >
                        Connect wallet
                    </button>
                </div>
            </div>
            </div>
        </div>
    </header>
    );
};

export default memo(Header);

